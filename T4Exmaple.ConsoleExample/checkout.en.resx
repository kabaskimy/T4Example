<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>





  <data name="ErrorChargesParams" xml:space="preserve">
    <value>There are invalid params in getting shipping Charges</value>
  </data> 


  <data name="ErrorLessAddressParams" xml:space="preserve">
    <value>Please enter your {0}</value>
  </data> 


  <data name="ErrorMaxAddressParams" xml:space="preserve">
    <value>The filed {0} must be no more than {1} bytes long</value>
  </data> 


  <data name="TipsComputerCharges" xml:space="preserve">
    <value>Please wait for computing the shipping charges</value>
  </data> 


  <data name="ParamTimeout" xml:space="preserve">
    <value>Timeout, please refresh the page</value>
  </data> 


  <data name="NoCartId" xml:space="preserve">
    <value>The card happened unknown error, please retry</value>
  </data> 


  <data name="ErrorGetShippingCharges" xml:space="preserve">
    <value>Getting shipping charges failed</value>
  </data> 


  <data name="ErrorPlaceOrder" xml:space="preserve">
    <value>Placing order failed</value>
  </data> 


  <data name="ErrorRepay" xml:space="preserve">
    <value>Repay failed</value>
  </data> 


  <data name="ErrorJsonFormat" xml:space="preserve">
    <value>The return value isn't a valid json object</value>
  </data> 


  <data name="ErrorInvalidInput" xml:space="preserve">
    <value>Invalid input</value>
  </data> 


  <data name="ErrorRequired" xml:space="preserve">
    <value>Required</value>
  </data> 


  <data name="ErrorRangeOut" xml:space="preserve">
    <value>Out range {0} to {1}</value>
  </data> 


  <data name="RegisterFailed" xml:space="preserve">
    <value>Register failed</value>
  </data> 


  <data name="TipsRepayConfirm" xml:space="preserve">
    <value>Loading</value>
  </data> 


  <data name="TipsSuccess" xml:space="preserve">
    <value>Success</value>
  </data> 


  <data name="SignInFailed" xml:space="preserve">
    <value>Sign in failed</value>
  </data> 


  <data name="TipsComputingCharges" xml:space="preserve">
    <value>Computing Shipping Charges</value>
  </data> 


  <data name="SuccessRepayConfirm" xml:space="preserve">
    <value>Success, we will jump to the repay page</value>
  </data> 


  <data name="SuccessPlaceOrder" xml:space="preserve">
    <value>Place an order successfully!</value>
  </data> 


  <data name="SuperSaverDes" xml:space="preserve">
    <value>Ship by Airmail, most valuable way of shipping your package.</value>
  </data> 


  <data name="StandardDes" xml:space="preserve">
    <value>Fee shipping with tracking number.</value>
  </data> 


  <data name="ExpeditedDes" xml:space="preserve">
    <value>Expedited shipping, fastest way to get your package.</value>
  </data> 


  <data name="SignInSignUp" xml:space="preserve">
    <value>Sign In / Sign Up</value>
  </data> 


  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data> 


  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data> 


  <data name="Submitting" xml:space="preserve">
    <value>Submitting</value>
  </data> 


  <data name="NoRefresh" xml:space="preserve">
    <value>Please <b>DO NOT</b> refresh the page</value>
  </data> 


  <data name="SaveThisAddress" xml:space="preserve">
    <value>Save this address</value>
  </data> 


  <data name="AnoLogin" xml:space="preserve">
    <value>Add Shipping Info</value>
  </data> 


  <data name="TitleAddAddress" xml:space="preserve">
    <value>Add Shipping Address</value>
  </data> 


  <data name="TitleEditAddress" xml:space="preserve">
    <value>Edit Shipping Address</value>
  </data> 


  <data name="InvalidCard" xml:space="preserve">
    <value>Invalid cart number</value>
  </data> 


  <data name="NoSupportCard" xml:space="preserve">
    <value>The cart type doesn't be supported</value>
  </data> 


  <data name="InvalidMonth" xml:space="preserve">
    <value>Invalid month</value>
  </data> 


  <data name="InvalidYear" xml:space="preserve">
    <value>Invalid year</value>
  </data> 


  <data name="AUPoBoxTip" xml:space="preserve">
    <value>Dear customer, please note that TOLL Global Express is offering Door-to-Door express delivery service which cannot recognize the PO Box address in AU Direct orders.</value>
  </data> 


  <data name="AUPoBoxError" xml:space="preserve">
    <value>Your package will be delivered via TOLL Global Express! Please note that shipping address containing “POBOX” cannot be reached.</value>
  </data> 


  <data name="AUCountryTip" xml:space="preserve">
    <value>Dear customer, please note that AU warehouse items are only available for shipment within Australia</value>
  </data> 


  <data name="AUCountryError" xml:space="preserve">
    <value>AU warehouse items are only available for shipment within Australia. All orders and shipments will be provided with Free tracked Toll Global Express shipping.</value>
  </data> 


  <data name="ShippingChargesForOthers" xml:space="preserve">
    <value>Shipping Charges for Others</value>
  </data> 


  <data name="ShippingCharges" xml:space="preserve">
    <value>Shipping Charges</value>
  </data> 

</root>
